# File to be $include{}'d into the param block of other high-level SLAM files.

# Minimum time (seconds) between scans for being attempted to be
# aligned. Scans faster than this rate will be just silently ignored.
min_time_between_scans: 0.01    # [seconds]
# Minimum Euclidean distance (x,y,z) between keyframes inserted into
# the map
min_dist_xyz_between_keyframes: 3   # [meters]
# If !=0, decimate point clouds so they do not have more than this number of points
decimate_to_point_count: 450
# Minimum ICP "goodness" (in the range [0,1]) for a new KeyFrame to be accepted
min_icp_goodness: 0.50        # range [0,1]
# ditto, for loop-closures attempts to align
min_icp_goodness_lc: 0.70     # range [0,1]
#
# ---------------------------------------------------------
# Instantiate one of the point cloud filters.
# See available methods with:
#  mola-cli --rtti-children-of mola::lidar_segmentation::LidarFilterBase
#
pointcloud_filter_class: mola::lidar_segmentation::FilterEdgesPlanes
# And its params:
pointcloud_filter_params:
    # Size (resolution) of the voxel filter
    voxel_filter_resolution: 1.0  # [meters]
    # decimate as we filter by voxels (1=no decimation)
    full_pointcloud_decimation: 10
    voxel_filter_decimation: 10
    voxel_filter_max_e2_e0: 30
    voxel_filter_max_e1_e0: 30
    voxel_filter_min_e2_e0: 80
    voxel_filter_min_e1_e0: 80
# ---------------------------------------------------------
# min/max distance to check for match/loop closure between KFs:
min_dist_to_matching: 5.0       # [m]
max_dist_to_matching: 20.0      # [m]
max_dist_to_loop_closure: 30.0  # [m]
max_nearby_align_checks: 5
min_topo_dist_to_consider_loopclosure: 30
# ---------------------------------------------------------
# Params for the ICP algoritm:
# Case: WITH a good twist (velocity) model:
icp_settings_with_vel: $include{$(mola-dir mola-fe-lidar)/params/icp-settings-regular.yaml}

# Case: WITHOUT a good twist (velocity) model:
icp_settings_without_vel: $include{$(mola-dir mola-fe-lidar)/params/icp-settings-regular.yaml}

# Case: Loop closure
loop_closure_montecarlo_samples: 10
icp_settings_loop_closure: $include{$(mola-dir mola-fe-lidar)/params/icp-settings-loop-closure.yaml}

# visualization:
viz_decor_decimation: 5
viz_decor_pointsize: 2.0

# -----------------------------------------------------
# DEBUG: Save all ICP pairings as 3Dscene files, for visual inspection
# Warning: this can consume a *huge* disk space
#debug_save_lidar_odometry: true
#debug_save_extra_edges: true
#debug_save_loop_closures: true
